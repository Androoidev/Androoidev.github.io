---
import { Code } from 'astro:components';

const code = `data class Developer(
    val name: String,
    val skills: List<String>,
    val interests: List<String>
)

data class TechStack(
    val android: List<String>,
    val ui: List<String>,
    val backend: List<String>
)

enum class ContactType {
    GITHUB, TWITTER, LINKEDIN, EMAIL
}

val techStack = TechStack(
    android = listOf(
        "Kotlin",
        "Jetpack Compose",
        "Android SDK",
        "Room Database",
        "Hilt"
    ),
    ui = listOf(
        "XML",
        "Material Design",
        "Jetpack Compose",
        "Figma"
    ),
    backend = listOf(
        "Firebase",
        "Supabase",
        "Node.js",
        "Ktor"
    )
)

val me = Developer(
    name = "Fernando",
    skills = techStack.android + techStack.ui + techStack.backend,
    interests = listOf(
        "Mobile Development",
        "Open Source",
        "UI/UX Design",
        "Performance Optimization"
    )
)

fun getContactUrl(type: ContactType): String {
    return when (type) {
        ContactType.GITHUB -> "https://github.com/tu_usuario"
        ContactType.LINKEDIN -> "https://linkedin.com/in/tu_perfil"
        ContactType.EMAIL -> "mailto:tuemail@example.com"
        else -> "No disponible"
    }
}
`;
---

<Code
    code={code}
    lang="kotlin"
    wrap={true}
/>

<style is:global>

    /* Estilos personalizados para el c√≥digo */
    pre.astro-code {
        @apply bg-gray-900 text-white p-4 rounded-lg overflow-auto !important;
    }

    pre.astro-code code {
        @apply block font-mono;
    }

    pre.astro-code code .line::before {
        content: counter(step);
        counter-increment: step;
        @apply text-gray-500 pr-4;
    }

</style>
